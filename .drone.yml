pipeline:
  identify:
    image: docker
    commands:
      - set -o pipefail
      - apk add --no-cache curl jq
      - curl -fsSL http://nzbget.net/info/nzbget-version-linux.json 
            | sed 's/NZBGet.VersionInfo = //'
            | tee .nzbget_latest_release
      - jq -r '.["stable-version"]' .nzbget_latest_release > .nzbget_stable_ver

  build:
    image: spritsail/docker-build
    volumes: [ '/var/run/docker.sock:/var/run/docker.sock' ]
    repo: nzbget-dev
    build_args:
      - 'NZBGET_VER=%file: .nzbget_stable_ver'

  test:
    image: docker
    volumes: [ '/var/run/docker.sock:/var/run/docker.sock' ]
    commands:
      - apk add --no-cache curl
      - CON_NAME=$(docker run -d nzbget-dev)
      - timeout -t 10 docker logs $$CON_NAME &
      - sleep 5
      - IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $$CON_NAME)
      - if [ -z "$IP" ]; then
            echo "The container exited.. sadpanda";
            docker inspect --format='{{.State.ExitCode}}' $$CON_NAME;
            docker rm $$CON_NAME
            exit 25;
        fi
      - curl -sSLu nzbget:tegbzn6789 --max-time 3 --retry 5 --retry-delay 2 --retry-connrefused $IP:6789 > /dev/null
      - docker kill $$CON_NAME # Not really needed, but keeps things quick
      - docker rm $$CON_NAME

  publish:
    image: spritsail/docker-publish
    volumes: [ '/var/run/docker.sock:/var/run/docker.sock' ]
    secrets: [ docker_username, docker_password, microbadger_token ]
    when: { branch: [ master ], event: [ push, tag, deployment ] }
    from: nzbget-dev
    repo: spritsail/nzbget
    tags:
      - 'latest'
      - '%fileauto: .nzbget_stable_ver'

  notify:
    image: appleboy/drone-telegram
    when: { status: [ success, failure ] }
    secrets: [ telegram_token, telegram_to ]
    message: |
      *{{repo.owner}}/{{repo.name}} [{{commit.branch}}]*: Build #{{build.number}}: *{{uppercase build.status}}*
      {{build.link}}
